knitr::opts_chunk$set(echo = TRUE)
n = 500
thetaF = runif(n, 0, 2*pi)
rF = runif(n, 0, 30)
xF = rF * cos(thetaF)
yF = rF * sin(thetaF)
plot(xF, yF, main = "Flopsy's position")
add_circle=function(radius)
{
xcoord=(radius/50)*c(-50:50)
ycoord_pos=sqrt(radius^2-xcoord^2)
ycoord_neg=-sqrt(radius^2-xcoord^2)
points(xcoord,ycoord_pos,type='l',col='red')
points(xcoord,ycoord_neg,type='l',col='red')
}
add_circle(30)
xM = c()
yM = c()
while(length(xM) < 500){
XY = runif(2, -30, 30)
if(XY[1]^2 + XY[2]^2 <= 30){
xM = append(xM, XY[1])
yM = append(yM, XY[2])
}
}
plot(xM, yM, main = "Mopsy's position")
n = 10000
thetaF = runif(n, 0, 2*pi)
rF = runif(n, 0, 30)
xF = rF * cos(thetaF)
yF = rF * sin(thetaF)
hist(xF, breaks = 60, prob = TRUE, xlab = "X coordinate", ylab = "Probaility density")
pdf_f=function(x)
{
fx= (1/pi)*(1/sqrt(30^2-x^2)) +
(1/(30*pi))*log(30+sqrt(30^2-x^2)) +
(-1/(30*pi))*log(abs(x)) +
(-1/(30*pi)) +
(-x^2/(30*pi))*(1/(30+sqrt(30^2-x^2)))*
(1/sqrt(30^2-x^2))
fx
}
curve(pdf_f, add = TRUE, col = 'red')
n = 10000
# Flopsy
thetaF = runif(n, 0, 2*pi)
rF = runif(n, 0, 30)
xF = rF * cos(thetaF)
yF = rF * sin(thetaF)
# Mopsy
xM = c()
yM = c()
while(length(xM) < n){
XY = runif(2, -30, 30)
if(XY[1]^2 + XY[2]^2 <= 30^2){
xM = append(xM, XY[1])
yM = append(yM, XY[2])
}
}
D = numeric(n)
for(i in 1:n){
D[i] = sqrt((xF[i] - xM[i])^2 + (yF[i] - yM[i])^2)
}
hist(D, breaks = 30, prob = TRUE)
est = sum(D) / n
# i.
Z = rep(c(0), n)
for(i in 1:n){
if(D[i] < 15){
Z[i] = 1
}
}
# ii.
p_E = sum(Z) / n
# iii.
sdev = sdphat(p_E, n)
npsold =
c(158, 196, 182, 190, 179, 162, 153, 179, 190, 194,
229, 204, 175, 211, 188, 163, 224, 150, 187, 155,
200, 185, 173, 202, 172, 184, 190, 189, 175, 190,
175, 190, 154, 162, 176, 202, 190, 211, 188, 211,
209, 189, 168, 178, 176, 188, 157, 188, 178, 161,
179, 162, 188, 187, 195, 215, 162, 171, 184, 208,
221, 190, 166, 159, 198, 163, 174, 183, 186, 180,
159, 213, 163, 210, 205, 157, 225, 211, 166, 155,
147, 175, 182, 215, 230, 181, 203, 184, 206, 178,
221, 173, 183, 175, 146, 199, 182, 154, 181, 223)
m1 = sum(npsold)/length(npsold)
m2 = sum(npsold^2)/length(npsold)
sdev = sqrt(m2 - m1^2)
hist(npsold, breaks = 25, xlab = "Frequency", ylab = "Frequency density", main = "Histogram of Newspapers sold", prob = TRUE)
curve(dnorm(x, m1, sdev), add = TRUE, col = "red")
hist(npsold, breaks = 40, xlab = "Frequency", ylab = "Frequency density", main = "Histogram of Newspapers sold", prob = TRUE)
avgProf = c(averageProfit(seq(from = 5, to = 100, by = 5), m1, sdev, 100))
cost = function(n){
if((0 <= n) && (n <= 200)){
return(n * 0.3)
}
else if(n > 200){
return(40 + n * 0.1)
}
}
# ii
profit = function(n, d){
return (d - cost(n))
}
# iii
averageProfit = function(n, mu, sigma, nreps){
return (sum(rnorm(nreps, mu, sigma)) / n)
}
avgProf = c(averageProfit(seq(from = 5, to = 100, by = 5), m1, sdev, 100))
avgProf = c(averageProfit(seq(from = 5, to = 100, by = 5), m1, sqrt(sdev), 100))
avgProf2 = c(averageProfit(seq(from = 5, to = 100, by = 5), m1, sdev^2, 100))
avgProf = c(averageProfit(seq(from = 5, to = 100, by = 5), m1, sdev, 100))
test = averageProfit(10, m1, sdev, 100)
test2 = averageProfit(10, m1, sdev, 100)
averageProfit = function(n, mu, sigma, nreps){
return (sum(rnorm(nreps, mu, sigma)) / nreps)
}
test2 = averageProfit(10, m1, sdev, 100)
averageProfit = function(n, mu, sigma, nreps){
return (profit(n,sum(rnorm(nreps, mu, sigma)) / nreps))
}
test = averageProfit(10, m1, sdev, 100)
averageProfit = function(n, mu, sigma, nreps){
return (sum(profit(n, rnorm(nreps, mu, sigma))) / nreps))
averageProfit = function(n, mu, sigma, nreps){
return (sum(profit(n, rnorm(nreps, mu, sigma))) / nreps)
}
test = averageProfit(10, m1, sdev, 100)
test2 = averageProfit(10, m1, sdev, 1)
c(profit(5, rnorm(10, mu, sigma)))
c(profit(5, rnorm(10, m1, sigma)))
?help
help rnorm
?help rnorm
help(rnorm)
c(profit(5, rnorm(10, m1, sigma)))
rnorm(10, m1, sigma)
rnorm(1, m1, sigma)
rnorm(1, 0, 1)
rnorm(10, 0, 1)
rnorm(10, m1, 1)
rnorm(10, m1, sdev)
test 3c(profit(5, rnorm(10, m1, sdev)))
test3 = c(profit(5, rnorm(10, m1, sdev)))
sum(test3) / 10
averageProfit = function(n, mu, sigma, nreps){
return (sum(profit(n, rnorm(nreps, mu, sigma))) / nreps)
}
avgProf = c(averageProfit(seq(from = 5, to = 100, by = 5), m1, sdev, 100))
cost = function(n){
if((0 <= n) & (n <= 200)){
return(n * 0.3)
}
else if(n > 200){
return(40 + n * 0.1)
}
}
avgProf = c(averageProfit(seq(from = 5, to = 100, by = 5), m1, sdev, 100))
Xtest = c(1,2,3)
7 - Xtest
cost2 = function(n){
r = numeric(length(n))
for(i in 1:length(n)){
if((0 <= n[i]) && (n[i] <= 200)){
r[i] = 0.3 * n[i]
}
else if(n[i] > 200){
r[i] = 40 + n[i] * 0.1
}
}
return (r)
}
# ii
profit2 = function(n, d){
return (d - cost2(n))
}
averageProfit2 = function(n, mu, sigma, nreps){
return (sum(profit2(n, rnorm(nreps, mu, sigma))) / nreps)
}
avgProf = c(averageProfit2(seq(from = 5, to = 100, by = 5), m1, sdev, 100))
avgProf = c(averageProfit2(seq(from = 5, to = 100, by = 5), m1, sdev, 100))
avgProf3 = c(averageProfit2(seq(from = 5, to = 100, by = 5), m1, sdev, 100))
profit2(c(1,2,3), d)
profit2(c(1,2,3), 5)
avgProf3 = c(averageProfit2(seq(from = 5, to = 100, by = 5), m1, sdev, 100))
testvec = profit2(seq(from = 5, to = 100, by = 5), 10)
averageProfit2(testVec, 0, 1, 10)
averageProfit2(testvec, 0, 1, 10)
averageProfit = function(n, mu, sigma, nreps){
p = c()
for(i in 1:n){
p.append(profit(i, rnorm(nreps, mu, sigma)))
}
return (sum(p) / nreps)
}
avgProf = c(averageProfit(seq(from = 5, to = 100, by = 5), m1, sdev, 100))
averageProfit = function(n, mu, sigma, nreps){
p = c()
for(i in 1:length(n)){
p.append(profit(n[i], rnorm(nreps, mu, sigma)))
}
return (sum(p) / nreps)
}
avgProf = c(averageProfit(seq(from = 5, to = 100, by = 5), m1, sdev, 100))
averageProfit = function(n, mu, sigma, nreps){
return (sum(profit(n[], rnorm(nreps, mu, sigma))) / nreps)
}
avgProf = c(averageProfit(seq(from = 5, to = 100, by = 5), m1, sdev, 100))
averageProfit = function(n, mu, sigma, nreps){
return (sum(profit(n[,], rnorm(nreps, mu, sigma))) / nreps)
}
avgProf = c(averageProfit(seq(from = 5, to = 100, by = 5), m1, sdev, 100))
averageProfit = function(n, mu, sigma, nreps){
return (sum(profit(n[:], rnorm(nreps, mu, sigma))) / nreps)
averageProfit = function(n, mu, sigma, nreps){
return (sum(profit(n[i:i+1], rnorm(nreps, mu, sigma))) / nreps)
}
avgProf = c(averageProfit(seq(from = 5, to = 100, by = 5), m1, sdev, 100))
help(sappy)
help(sapply)
averageProfit = function(n, mu, sigma, nreps){
return (sum(sapply(n, profit(x, rnorm(nreps, mu, sigma))) / nreps))
}
avgProf = c(averageProfit(seq(from = 5, to = 100, by = 5), m1, sdev, 100))
averageProfit = function(n, mu, sigma, nreps){
return (sum(sapply(n, function(x) profit(x, rnorm(nreps, mu, sigma))) / nreps))
}
avgProf = c(averageProfit(seq(from = 5, to = 100, by = 5), m1, sdev, 100))
averageProfit = function(n, mu, sigma, nreps){
return (sum(profit(n, rnorm(nreps, mu, sigma))) / nreps)
}
avgProf = c(averageProfit(seq(from = 5, to = 100, by = 5), m1, sdev, 100))
averageProfit = function(n, mu, sigma, nreps){
s = 0
for(i in 1:length(n)){
s = s + profit(n[i], rnorm(nreps, mu, sigma))
}
return (s / nreps)
}
avgProf = c(averageProfit(seq(from = 5, to = 100, by = 5), m1, sdev, 100))
help(avg)
help(avgerage)
help(mean)
mean(avgProf)
avgProf = c(averageProfit(seq(from = 5, to = 1000, by = 5), m1, sdev, 1000))
mean(avgProf)
plot(avgProf, c(0:100))
plot(avgProf, c(0:1000))
plot(avgProf, c(1:1000))
